@component-name = "portal-collaboration"
definition {

	property portal.release = "true";
	property portal.upstream = "true";
	property testray.main.component.name = "Wiki";
	var pageName = "Wiki Test Page";
	var portletName = "Wiki";

	setUp {
		TestCase.setUpPortalInstance();

		User.firstLoginPG();

		JSONLayout.addPublicLayout(
			groupName = "Guest",
			layoutName = "Wiki Test Page");

		JSONLayout.addWidgetToPublicLayout(
			column = "1",
			groupName = "Guest",
			layoutName = "Wiki Test Page",
			widgetName = "Wiki");

		Navigator.gotoPage(pageName = "Wiki Test Page");
	}

	tearDown {
		var testPortalInstance = PropsUtil.get("test.portal.instance");

		if ("${testPortalInstance}" == "true") {
			PortalInstances.tearDownCP();
		}
		else {
			WikiPage.tearDownCP();

			WikiNode.tearDownCP();

			Page.tearDownCP();
		}
	}

	@priority = "5"
	test AddChildSiteWikiFrontPageFormatHTML {
		property testray.component.names = "Training";
		var portalURL = PropsUtil.get("portal.url");

		JSONGroup.addGroup(groupName = "Site Name");

		SitePages.openPagesAdmin(siteURLKey = "Site Name");

		ProductMenu.gotoPortlet(
			category = "Sites",
			panel = "Control Panel",
			portlet = "Sites");

		Site.addBlankCP(
			parentSiteName = "Site Name",
			siteName = "Child SiteName");

		SitePages.openPagesAdmin(siteURLKey = "Child SiteName");

		ProductMenu.gotoPortlet(
			category = "Content &amp; Data",
			panel = "Site Administration",
			portlet = "Wiki");

		WikiNavigator.gotoNode(wikiNodeName = "Main");

		WikiNavigator.gotoCP(wikiPageTitle = "FrontPage");

		AssertClick(
			locator1 = "Wiki#FRONTPAGE_DEFAULT_MESSAGE",
			value1 = "This page is empty. Edit it to add some text.");

		WikiEntry.selectPageFormat(pageFormat = "HTML");

		WikiEntry.confirmHTML();

		AlloyEditor.addContent(content = '''<!DOCTYPE html> <html lang="en"> <body> <h1>My First Heading</h1> <p>My first paragraph.</p> </body> </html>''');

		PortletEntry.publish();

		SitePages.openPagesAdmin(siteURLKey = "Child SiteName");

		ProductMenu.gotoPortlet(
			category = "Site Builder",
			panel = "Site Administration",
			portlet = "Pages");

		SitePages.addPrivatePage(pageName = "Child Site Page");

		SitePages.configurePage(
			columnName = "1 Column",
			pageName = "Child Site Page",
			privacy = "Private Pages",
			sitePageType = "Widget Page");

		Page.view(
			pageName = "Child Site Page",
			privacy = "Private Pages");

		Navigator.gotoSpecificURLPage(
			pageName = "Child Site Page",
			url = "${portalURL}/group/child-sitename/child-site-page");

		Portlet.addPG(portletName = "Wiki");

		AssertClick(
			locator1 = "Link#EDIT",
			value1 = "Edit");

		AlloyEditor.addContent(content = '''<!DOCTYPE html> <html lang="en"> <body> <h1>Edited My First Heading</h1> <p>Edited My first paragraph.</p> </body> </html>''');

		PortletEntry.publish();

		Navigator.gotoSpecificURLPage(
			pageName = "Child Site Page",
			url = "${portalURL}/group/child-sitename/child-site-page");

		WikiPage.viewFrontPagePG(
			wikiNodeName = "FrontPage",
			wikiPageContent = "Edited My first paragraph.");
	}

	@priority = "4"
	test AddFrontPageChildPageFormatHTML {

		var welcomeToLiferay = '''
				<p><a href="http://www.liferay.com">Welcome to LIFERAY</a></p>
			''';

		Navigator.gotoPage(pageName = "Wiki Test Page");

		WikiPage.addFrontPagePG(wikiPageContent = "Wiki FrontPage Content");

		WikiNavigator.gotoPG(wikiPageTitle = "FrontPage");

		AssertClick.assertTextClickAtAndPause(
			locator1 = "Link#ADD_CHILD_PAGE",
			value1 = "Add Child Page");

		WikiEntry.selectPageFormat(pageFormat = "HTML");

		WikiEntry.confirmHTML();

		WikiEntry.addPageTitle(wikiPageTitle = "Wiki FrontPage Child Page Title");

		AlloyEditor.addSourceContent(content = "${welcomeToLiferay}");

		PortletEntry.publish();

		Navigator.gotoPage(pageName = "Wiki Test Page");

		WikiNavigator.gotoChildPagePG(wikiChildPageTitle = "Wiki FrontPage Child Page Title");

		WikiPage.viewChildPagePG(
			wikiChildPageContent = "Welcome to LIFERAY",
			wikiChildPageTitle = "Wiki FrontPage Child Page Title");
	}

	@priority = "4"
	test AddFrontPageChildPageWithInvalidTitle {
		WikiPage.addFrontPagePG(
			wikiNodeName = "Main",
			wikiPageContent = "Wiki FrontPage Content",
			wikiPageTitle = "FrontPage");

		Navigator.gotoPage(pageName = "Wiki Test Page");

		WikiNavigator.gotoPG(wikiPageTitle = "FrontPage");

		WikiPage.addFrontPageChildPageInvalidTitle(
			wikiChildPageContent = "Wiki FrontPage Child Page Content",
			wikiChildPageInvalidTitle = "true",
			wikiChildPageTitle = "Wiki\ Front\ Page\ Child\ Page\ Title\");

		Navigator.gotoPage(pageName = "Wiki Test Page");

		WikiNavigator.gotoPG(wikiPageTitle = "FrontPage");

		WikiPage.addFrontPageChildPageInvalidTitle(
			wikiChildPageContent = "Wiki FrontPage Child Page Content",
			wikiChildPageInvalidTitle = "true",
			wikiChildPageTitle = "Wiki] Front] Page] Child] Page] Title]");

		Navigator.gotoPage(pageName = "Wiki Test Page");

		WikiNavigator.gotoPG(wikiPageTitle = "FrontPage");

		WikiPage.addFrontPageChildPageInvalidTitle(
			wikiChildPageContent = "Wiki FrontPage Child Page Content",
			wikiChildPageInvalidTitle = "true",
			wikiChildPageTitle = "Wiki[ Front[ Page[ Child[ Page[ Title[");

		Navigator.gotoPage(pageName = "Wiki Test Page");

		WikiNavigator.gotoPG(wikiPageTitle = "FrontPage");

		WikiPage.addFrontPageChildPageInvalidTitle(
			wikiChildPageContent = "Wiki FrontPage Child Page Content",
			wikiChildPageInvalidTitle = "true",
			wikiChildPageTitle = "Wiki; Front; Page; Child; Page; Title;");

		Navigator.gotoPage(pageName = "Wiki Test Page");

		WikiNavigator.gotoPG(wikiPageTitle = "FrontPage");

		WikiPage.addFrontPageChildPageInvalidTitle(
			wikiChildPageContent = "Wiki FrontPage Child Page Content",
			wikiChildPageInvalidTitle = "true",
			wikiChildPageTitle = "Wiki: Front: Page: Child: Page: Title:");

		Navigator.gotoPage(pageName = "Wiki Test Page");

		WikiNavigator.gotoPG(wikiPageTitle = "FrontPage");

		WikiPage.addFrontPageChildPageInvalidTitle(
			wikiChildPageContent = "Wiki FrontPage Child Page Content",
			wikiChildPageInvalidTitle = "true",
			wikiChildPageTitle = "Wiki| Front| Page| Child| Page| Title|");

		Navigator.gotoPage(pageName = "Wiki Test Page");

		WikiNavigator.gotoPG(wikiPageTitle = "FrontPage");

		WikiPage.addFrontPageChildPageInvalidTitle(
			wikiChildPageContent = "Wiki FrontPage Child Page Content",
			wikiChildPageInvalidTitle = "true",
			wikiChildPageTitle = "Wiki&lt; Front&lt; Page&lt; Child&lt; Page&lt; Title&lt;");

		Navigator.gotoPage(pageName = "Wiki Test Page");

		WikiNavigator.gotoPG(wikiPageTitle = "FrontPage");

		WikiPage.addFrontPageChildPageInvalidTitle(
			wikiChildPageContent = "Wiki FrontPage Child Page Content",
			wikiChildPageInvalidTitle = "true",
			wikiChildPageTitle = "Wiki&gt; Front&gt; Page&gt; Child&gt; Page&gt; Title&gt;");

		Navigator.gotoPage(pageName = "Wiki Test Page");

		WikiNavigator.gotoPG(
			wikiPageContent = "Wiki FrontPage Content",
			wikiPageRevision = "1.1",
			wikiPageTitle = "FrontPage",
			wikiPageUsername = "Test Test");

		WikiPage.viewPG(
			wikiPageContent = "Wiki FrontPage Content",
			wikiPageTitle = "FrontPage");

		Navigator.gotoPage(pageName = "Wiki Test Page");

		WikiNavigator.gotoAllPagesPG();

		WikiPage.viewNoChildPagePGViaAllPages(
			wikiChildPageTitle = "Wiki FrontPage Child Page Title",
			wikiPageRevision = "1.1",
			wikiPageTitle = "FrontPage",
			wikiPageUsername = "Test Test");
	}

	@priority = "4"
	test AddFrontPageContentWithNoJavascript {
		Navigator.gotoPage(pageName = "Wiki Test Page");

		AssertClick(
			locator1 = "Wiki#FRONTPAGE_DEFAULT_MESSAGE",
			value1 = "This page is empty. Edit it to add some text.");

		WikiEntry.selectPageFormat(pageFormat = "HTML");

		WikiEntry.confirmHTML();

		AlloyEditor.addSourceContent(content = '''
				<p id="demo">PASS</p><script type="text/javascript">document.getElementById('demo').innerHTML="this code should not be read by the client";</script>
			''');

		PortletEntry.publish();

		Navigator.gotoPage(pageName = "Wiki Test Page");

		WikiNavigator.gotoFrontPagePG();

		WikiPage.viewFrontPagePG(
			wikiPageContent = "PASS",
			wikiPageTitle = "FrontPage");
	}

	@priority = "4"
	test AddFrontPageWithAttachments {
		Navigator.gotoPage(pageName = "Wiki Test Page");

		WikiPage.addFrontPagePG(wikiPageContent = "Wiki FrontPage Content");

		Navigator.gotoPage(pageName = "Wiki Test Page");

		WikiNavigator.gotoPG(wikiPageTitle = "FrontPage");

		for (var attachmentFileName : list "Document_1.jpg,Document_2.mp3,Document_3.doc") {
			WikiPage.addAttachmentViaPageEdit(
				attachmentFileName = "${attachmentFileName}",
				wikiPageTitle = "FrontPage");

			Navigator.gotoPage(pageName = "Wiki Test Page");

			WikiNavigator.gotoPG(wikiPageTitle = "FrontPage");
		}

		WikiPage.viewAttachmentPGViaEdit(
			attachmentFileName = "Document_1.jpg",
			attachmentFileSize = "13 KB",
			numberOfAttachments = "3",
			wikiPageTitle = "FrontPage");

		Navigator.gotoPage(pageName = "Wiki Test Page");

		WikiNavigator.gotoPG(wikiPageTitle = "FrontPage");

		WikiPage.viewAttachmentPGViaEdit(
			attachmentFileName = "Document_2.mp3",
			attachmentFileSize = "864 B",
			numberOfAttachments = "3",
			wikiPageTitle = "FrontPage");

		Navigator.gotoPage(pageName = "Wiki Test Page");

		WikiNavigator.gotoPG(wikiPageTitle = "FrontPage");

		WikiPage.viewAttachmentPGViaEdit(
			attachmentFileName = "Document_3.doc",
			attachmentFileSize = "24 KB",
			numberOfAttachments = "3",
			wikiPageTitle = "FrontPage");
	}

	@priority = "5"
	test AddFrontPageWithChildPages {
		Navigator.gotoPage(pageName = "Wiki Test Page");

		WikiPage.addFrontPagePG(wikiPageContent = "Wiki FrontPage Content");

		WikiNavigator.gotoPG(wikiPageTitle = "FrontPage");

		for (var childPageCount : list "1,2,3") {
			WikiPage.addChildPagePG(
				wikiChildPageContent = "Wiki FrontPage Child Page${childPageCount} Content",
				wikiChildPageTitle = "Wiki FrontPage Child Page${childPageCount} Title",
				wikiPageTitle = "FrontPage");
		}

		Navigator.gotoPage(pageName = "Wiki Test Page");

		for (var childPageCount : list "1,2,3") {
			WikiNavigator.gotoPG(wikiPageTitle = "FrontPage");

			WikiNavigator.gotoChildPagePG(wikiChildPageTitle = "Wiki FrontPage Child Page${childPageCount} Title");

			WikiPage.viewChildPagePG(
				wikiChildPageContent = "Wiki FrontPage Child Page${childPageCount} Content",
				wikiChildPageTitle = "Wiki FrontPage Child Page${childPageCount} Title");
		}
	}

	@priority = "4"
	test AddFrontPageWithCreoleFormat {
		Navigator.gotoPage(pageName = "Wiki Test Page");

		WikiPage.addFrontPagePG(
			creoleSource = "true",
			wikiPageContent = "**Wiki FrontPage Content**",
			wikiPageText = "Wiki FrontPage Content");

		Navigator.gotoPage(pageName = "Wiki Test Page");

		WikiNavigator.gotoPG(
			wikiPageContent = "Wiki FrontPage Content",
			wikiPageRevision = "1.1",
			wikiPageTitle = "FrontPage",
			wikiPageUsername = "Test Test");

		WikiPage.viewPG(
			wikiPageContent = "Wiki FrontPage Content",
			wikiPageTitle = "FrontPage");
	}

	@priority = "5"
	test AddFrontPageWithHTMLFormat {
		property portal.acceptance = "true";
		property testray.component.names = "Training";

		Navigator.gotoPage(pageName = "Wiki Test Page");

		WikiPage.addFrontPagePG(
			htmlSource = "true",
			wikiPageContent = '''<p><a href="/">Home</a></p>
			''');

		Navigator.gotoPage(pageName = "Wiki Test Page");

		WikiNavigator.gotoPG(
			isOrphanPage = "true",
			wikiPageTitle = "FrontPage");

		WikiPage.viewPG(
			isOrphanPage = "true",
			wikiPageContent = "Home",
			wikiPageContentLink = "true",
			wikiPageRevision = "1.1",
			wikiPageTitle = "FrontPage",
			wikiPageUsername = "Test Test");
	}

	@priority = "5"
	test AddPageWithChildPage {
		Navigator.gotoPage(pageName = "Wiki Test Page");

		WikiNavigator.gotoAllPagesPG();

		WikiPage.addPG(
			wikiPageContent = "Wiki Page Content",
			wikiPageTitle = "Wiki Page Title");

		Navigator.gotoPage(pageName = "Wiki Test Page");

		WikiNavigator.gotoPG(wikiPageTitle = "Wiki Page Title");

		WikiPage.addChildPagePG(
			wikiChildPageContent = "Wiki Child Page Content",
			wikiChildPageTitle = "Wiki Child Page Title",
			wikiPageTitle = "Wiki Page Title");

		Navigator.gotoPage(pageName = "Wiki Test Page");

		WikiNavigator.gotoPG(wikiPageTitle = "Wiki Page Title");

		WikiNavigator.gotoChildPagePG(wikiChildPageTitle = "Wiki Child Page Title");

		WikiPage.viewChildPagePG(
			wikiChildPageContent = "Wiki Child Page Content",
			wikiChildPageTitle = "Wiki Child Page Title");
	}

	@priority = "5"
	test AddPageWithHTMLFormat {

		var welcomeToLiferay = '''
				<p><a href="http://www.liferay.com">Welcome to LIFERAY</a></p>
			''';

		Navigator.gotoPage(pageName = "Wiki Test Page");

		WikiNavigator.gotoAllPagesPG();

		WikiNavigator.gotoAddPageViaPG();

		WikiEntry.selectPageFormat(pageFormat = "HTML");

		WikiEntry.confirmHTML();

		WikiEntry.addPageTitle(wikiPageTitle = "Wiki Page Title");

		AlloyEditor.addSourceContent(content = "${welcomeToLiferay}");

		PortletEntry.publish();

		Navigator.gotoPage(pageName = "Wiki Test Page");

		WikiNavigator.gotoPG(
			wikiPageContent = "Welcome to LIFERAY",
			wikiPageRevision = "1.0",
			wikiPageTitle = "Wiki Page Title",
			wikiPageUsername = "Test Test");

		Pause(locator1 = "1000");

		WikiPage.viewPG(
			wikiPageContent = "Welcome to LIFERAY",
			wikiPageTitle = "Wiki Page Title");
	}

	@description = "This test covers LPS-95711. It ensures that an image can be added to the front page via URL."
	@ignore = "true"
	@priority = "4"
	test AddPageWithImageViaURL {
		Navigator.gotoPage(pageName = "Wiki Test Page");

		WikiNavigator.gotoFrontPagePG();

		WikiNavigator.gotoBodyLinkPG(wikiPageContent = "This page is empty. Edit it to add some text.");

		ItemSelector.gotoItemSelectorViaAlloyEditor();

		ItemSelector.addFromURL(
			imageSourceURL = "https://raw.githubusercontent.com/liferay/liferay-portal/master/portal-web/test/functional/com/liferay/portalweb/dependencies/Document_1.jpg",
			navTab = "URL");

		AssertElementPresent(
			key_contentImageName = "Document_1.jpg",
			locator1 = "Wiki#CONTENT_IMAGE_NAME");

		PortletEntry.publish();

		Navigator.gotoPage(pageName = "Wiki Test Page");

		AssertElementPresent(
			key_contentImageName = "Document_1.jpg",
			locator1 = "Wiki#CONTENT_IMAGE_NAME");
	}

	@priority = "4"
	test AddPageWithInlineImage {
		ProductMenu.gotoPortlet(
			category = "Site Builder",
			panel = "Site Administration",
			portlet = "Pages");

		SitePages.configurePage(
			columnName = "1 Column",
			pageName = "Wiki Test Page",
			privacy = "Public Pages",
			sitePageType = "Widget Page");

		Navigator.gotoPage(pageName = "Wiki Test Page");

		WikiNavigator.gotoAllPagesPG();

		WikiPage.addPG(
			wikiPageContent = "Wiki Page Content",
			wikiPageTitle = "Wiki Page Title");

		Navigator.gotoPage(pageName = "Wiki Test Page");

		WikiNavigator.gotoPG(
			wikiPageContent = "Wiki Page Content",
			wikiPageRevision = "1.0",
			wikiPageTitle = "Wiki Page Title",
			wikiPageUsername = "Test Test");

		WikiPage.viewPG(
			wikiPageContent = "Wiki Page Content",
			wikiPageTitle = "Wiki Page Title");

		Navigator.gotoPage(pageName = "Wiki Test Page");

		WikiNavigator.gotoAllPagesPG();

		WikiNavigator.gotoEntryEditViaPGTable(wikiPageTitle = "Wiki Page Title");

		WikiPage.addInlineImageViaEdit(
			navTab = "Upload Image",
			uploadFileName = "Document_1.jpg");

		PortletEntry.publish();

		WikiNavigator.gotoPG(
			wikiPageContent = "Wiki Page Content",
			wikiPageRevision = "1.0",
			wikiPageTitle = "Wiki Page Title",
			wikiPageUsername = "Test Test");

		WikiPage.viewPageWithAttachment(
			attachmentFileName = "Document_1.jpg",
			wikiPageContent = "Wiki Page Content",
			wikiPageTitle = "Wiki Page Title");
	}

	@priority = "5"
	test AddWikiPages {
		property testray.component.names = "Training";

		Navigator.gotoPage(pageName = "Wiki Test Page");

		WikiNavigator.gotoAllPagesPG();

		for (var entryCount : list "1,2,3") {
			WikiPage.addPG(
				wikiPageContent = "Wiki Page${entryCount} Content",
				wikiPageTitle = "Wiki Page${entryCount} Title");
		}

		for (var entryCount : list "1,2,3") {
			Navigator.gotoPage(pageName = "Wiki Test Page");

			WikiNavigator.gotoPG(
				wikiPageContent = "Wiki Page${entryCount} Content",
				wikiPageRevision = "1.0",
				wikiPageTitle = "Wiki Page${entryCount} Title",
				wikiPageUsername = "Test Test");

			WikiPage.viewPG(
				wikiPageContent = "Wiki Page${entryCount} Content",
				wikiPageTitle = "Wiki Page${entryCount} Title");
		}
	}

	@priority = "5"
	test CancelAddPage {
		Navigator.gotoPage(pageName = "Wiki Test Page");

		WikiNavigator.gotoAllPagesPG();

		WikiNavigator.gotoAddPageViaPG();

		WikiEntry.addPageTitle(wikiPageTitle = "Wiki Page Title");

		WikiEntry.addPageContent(wikiPageContent = "Wiki Page Content");

		WikiEntry.cancel();

		WikiTable.viewNoEntry(wikiPageTitle = "Wiki Page Title");
	}

	@priority = "5"
	test CancelEditPage {
		Navigator.gotoPage(pageName = "Wiki Test Page");

		WikiNavigator.gotoAllPagesPG();

		WikiNavigator.gotoAddPageViaPG();

		WikiEntry.addPageTitle(wikiPageTitle = "Wiki Page Title");

		WikiEntry.addPageContent(wikiPageContent = "Wiki Page Content");

		PortletEntry.publish();

		Navigator.gotoPage(pageName = "Wiki Test Page");

		WikiNavigator.gotoAllPagesPG();

		WikiNavigator.gotoEntryEditViaPGTable(wikiPageTitle = "Wiki Page Title");

		WikiEntry.addPageContent(wikiPageContent = "Edited Wiki Page Content");

		WikiEntry.cancel();

		WikiNavigator.gotoEntryViaPGTable(wikiPageTitle = "Wiki Page Title");

		WikiEntry.viewPageContentBody(wikiPageContent = "Wiki Page Content");
	}

	@priority = "4"
	test CompareVersionEditFrontPage {
		Navigator.gotoPage(pageName = "Wiki Test Page");

		WikiPage.addFrontPagePG(
			wikiPageContent = "Wiki Front Page Content",
			wikiPageTitle = "FrontPage");

		Navigator.gotoPage(pageName = "Wiki Test Page");

		WikiPage.editFrontPagePG(wikiPageContentEdit = "Wiki Front Page Content Edit");

		Navigator.gotoPage(pageName = "Wiki Test Page");

		WikiNavigator.gotoPG(
			wikiPageContent = "Wiki Front Page Content Edit",
			wikiPageRevision = "1.2",
			wikiPageTitle = "FrontPage",
			wikiPageUsername = "Test Test");

		WikiPage.viewPG(
			wikiPageContent = "Wiki Front Page Content Edit",
			wikiPageTitle = "FrontPage");

		Navigator.gotoPage(pageName = "Wiki Test Page");

		WikiNavigator.gotoPG(wikiPageTitle = "FrontPage");

		WikiPage.compareVersionsPG(
			wikiPageContentEdit = "Wiki Front Page Content Edit",
			wikiPageTitle = "FrontPage",
			wikiPageVersionDiff = "Wiki Front Page Content Edit",
			wikiPageVersionNew = "1.2",
			wikiPageVersionOld = "1.0");
	}

	@priority = "4"
	test CopyPage {
		Navigator.gotoPage(pageName = "Wiki Test Page");

		WikiNavigator.gotoAllPagesPG();

		WikiNavigator.gotoAddPageViaPG();

		WikiEntry.addPageTitle(wikiPageTitle = "Wiki Page Title");

		WikiEntry.addPageContent(wikiPageContent = "Wiki Page Content");

		PortletEntry.publish();

		Navigator.gotoPage(pageName = "Wiki Test Page");

		WikiNavigator.gotoAllPagesPG();

		WikiNavigator.gotoEntryCopyViaPGTable(wikiPageTitle = "Wiki Page Title");

		WikiEntry.addPageTitle(wikiPageTitle = "Copied Wiki Page Title");

		WikiEntry.addPageContent(wikiPageContent = "Copied Wiki Page Content");

		PortletEntry.publish();

		WikiTable.viewEntry(
			draftStatus = "APPROVED",
			wikiPageTitle = "Wiki Page Title");

		WikiTable.viewEntry(
			draftStatus = "APPROVED",
			wikiPageTitle = "Copied Wiki Page Title");

		WikiNavigator.gotoEntryViaPGTable(wikiPageTitle = "Copied Wiki Page Title");

		WikiEntry.viewPageContentBody(wikiPageContent = "Copied Wiki Page Content");
	}

	@priority = "5"
	test DeleteFrontPage {
		property portal.acceptance = "true";

		Navigator.gotoPage(pageName = "Wiki Test Page");

		WikiPage.addFrontPagePG(
			wikiPageContent = "Wiki FrontPage Content",
			wikiPageTitle = "FrontPage");

		Navigator.gotoPage(pageName = "Wiki Test Page");

		WikiNavigator.gotoAllPagesPG();

		WikiPage.deletePG(wikiPageTitle = "FrontPage");
	}

	@priority = "5"
	test DeletePage {
		Navigator.gotoPage(pageName = "Wiki Test Page");

		WikiNavigator.gotoAllPagesPG();

		WikiPage.addPG(
			wikiPageContent = "Wiki Page Content",
			wikiPageTitle = "Wiki Page Title");

		Navigator.gotoPage(pageName = "Wiki Test Page");

		WikiNavigator.gotoAllPagesPG();

		WikiPage.deletePG(wikiPageTitle = "Wiki Page Title");

		Navigator.gotoPage(pageName = "Wiki Test Page");

		WikiNavigator.gotoAllPagesPG();

		WikiPage.viewNoPagePG(wikiPageTitle = "Wiki Page Title");
	}

	@priority = "5"
	test EditDraftPage {
		Navigator.gotoPage(pageName = "Wiki Test Page");

		WikiNavigator.gotoAllPagesPG();

		WikiNavigator.gotoAddPageViaPG();

		WikiEntry.addPageTitle(wikiPageTitle = "Wiki Page Title");

		WikiEntry.addPageContent(wikiPageContent = "Wiki Page Content");

		WikiEntry.saveAsDraft();

		Navigator.gotoPage(pageName = "Wiki Test Page");

		WikiNavigator.gotoDraftPagesPG();

		WikiNavigator.gotoEntryEditViaPGTable(wikiPageTitle = "Wiki Page Title");

		AssertElementPresent(
			key_editor = "content",
			locator1 = "AlloyEditor#EDITOR");

		Click(
			key_editor = "content",
			locator1 = "AlloyEditor#EDITOR");

		AssertElementPresent(locator1 = "AlloyEditor#CONTENT_ADD_BUTTON");

		WikiEntry.addPageContent(wikiPageContent = "Edited Wiki Page Content");

		PortletEntry.publish();

		Navigator.gotoPage(pageName = "Wiki Test Page");

		WikiNavigator.gotoAllPagesPG();

		WikiTable.viewEntry(
			draftStatus = "APPROVED",
			wikiPageTitle = "Wiki Page Title");

		WikiNavigator.gotoEntryViaPGTable(wikiPageTitle = "Wiki Page Title");

		WikiEntry.viewPageContentBody(wikiPageContent = "Edited Wiki Page Content");
	}

	@priority = "5"
	test EditFrontPage {
		property portal.acceptance = "true";

		Navigator.gotoPage(pageName = "Wiki Test Page");

		WikiPage.addFrontPagePG(
			wikiPageContent = "Wiki FrontPage Content",
			wikiPageTitle = "FrontPage");

		Navigator.gotoPage(pageName = "Wiki Test Page");

		WikiPage.editFrontPagePG(wikiPageContentEdit = "Wiki FrontPage Content Edit");

		Navigator.gotoPage(pageName = "Wiki Test Page");

		WikiNavigator.gotoPG(
			wikiPageContent = "Wiki FrontPage Content Edit",
			wikiPageRevision = "1.2",
			wikiPageTitle = "FrontPage",
			wikiPageUsername = "Test Test");

		WikiPage.viewPG(
			wikiPageContent = "Wiki FrontPage Content Edit",
			wikiPageTitle = "FrontPage");
	}

	@priority = "4"
	test LinkWikiPage1toWikiPage2 {
		Navigator.gotoPage(pageName = "Wiki Test Page");

		WikiNavigator.gotoAllPagesPG();

		WikiPage.addPG(
			wikiPageContent = "Wiki Page1 Content",
			wikiPageTitle = "Wiki Page1 Title");

		Navigator.gotoPage(pageName = "Wiki Test Page");

		WikiNavigator.gotoAllPagesPG();

		WikiPage.addPG(
			wikiPageContent = "Wiki Page2 Content",
			wikiPageTitle = "Wiki Page2 Title");

		Navigator.gotoPage(pageName = "Wiki Test Page");

		WikiNavigator.gotoPG(wikiPageTitle = "Wiki Page1 Title");

		WikiPage.linkPG(
			wikiPage1Content = "Wiki Page1 Content",
			wikiPage1Title = "Wiki Page1 Title",
			wikiPage2Content = "Wiki Page2 Content",
			wikiPage2Link = "[[Wiki Page2 Title]]",
			wikiPage2Title = "Wiki Page2 Title");

		Navigator.gotoPage(pageName = "Wiki Test Page");

		WikiNavigator.gotoPG(wikiPageTitle = "Wiki Page1 Title");

		WikiNavigator.gotoBodyLinkPG(wikiPageContent = "Wiki Page2 Title");

		WikiPage.viewPG(
			wikiPageContent = "Wiki Page2 Content",
			wikiPageTitle = "Wiki Page2 Title");
	}

	@priority = "3"
	test RemoveRedirectLinkFromPage {
		property test.name.skip.portal.instance = "PGWiki#RemoveRedirectLinkFromWikiPage";

		Navigator.gotoPage(pageName = "Wiki Test Page");

		WikiNavigator.gotoAllPagesPG();

		WikiPage.addPG(
			wikiPageContent = "Wiki Page Content",
			wikiPageTitle = "Wiki Page Title");

		Navigator.gotoPage(pageName = "Wiki Test Page");

		WikiNavigator.gotoPG(wikiPageTitle = "Wiki Page Title");

		WikiPage.renameWikiPagePG(
			wikiPageTitle = "Wiki Page Title",
			wikiPageTitleRename = "Wiki Page Rename");

		WikiNavigator.gotoPG(wikiPageTitle = "Wiki Page Title");

		WikiPage.removeRedirectWikiPagePG(
			wikiPage2Content = "Wiki2 Page2 Content2",
			wikiPageTitle = "Wiki Page Title",
			wikiPageTitleRename = "Wiki Page Rename");

		Navigator.gotoPage(pageName = "Wiki Test Page");

		WikiNavigator.gotoPG(wikiPageTitle = "Wiki Page Title");

		WikiPage.cannotViewRedirectLinkPG();

		WikiPage.viewPG(
			wikiPageContent = "Wiki2 Page2 Content2",
			wikiPageTitle = "Wiki Page Title");

		WikiNavigator.gotoPG(wikiPageTitle = "Wiki Page Rename");

		WikiPage.cannotViewRedirectLinkPG();

		WikiPage.viewPG(
			wikiPageContent = "Wiki Page Content",
			wikiPageTitle = "Wiki Page Rename");
	}

	@priority = "4"
	test RenamePageTitle {
		Navigator.gotoPage(pageName = "Wiki Test Page");

		WikiNavigator.gotoAllPagesPG();

		WikiPage.addPG(
			wikiPageContent = "Wiki Page Content",
			wikiPageTitle = "Wiki Page Title");

		Navigator.gotoPage(pageName = "Wiki Test Page");

		WikiNavigator.gotoPG(wikiPageTitle = "Wiki Page Title");

		WikiPage.renameWikiPagePG(
			wikiPageTitle = "Wiki Page Title",
			wikiPageTitleRename = "Wiki Page Rename");

		WikiNavigator.gotoPG(wikiPageTitle = "Wiki Page Title");

		WikiPage.viewRedirectLinkPG(wikiPageRedirectLink = "(Redirected from Wiki Page Title)");

		WikiPage.viewPG(
			wikiPageContent = "Wiki Page Content",
			wikiPageTitle = "Wiki Page Rename");

		WikiNavigator.gotoPG(wikiPageTitle = "Wiki Page Rename");

		WikiPage.cannotViewRedirectLinkPG();

		WikiPage.viewPG(
			wikiPageContent = "Wiki Page Content",
			wikiPageTitle = "Wiki Page Rename");
	}

	@priority = "4"
	test RevertChangesMadeToParentPages {
		Navigator.gotoPage(pageName = "Wiki Test Page");

		WikiNavigator.gotoAllPagesPG();

		WikiPage.addPG(
			wikiPageContent = "Wiki Page1 Content",
			wikiPageTitle = "Wiki Page1 Title");

		Navigator.gotoPage(pageName = "Wiki Test Page");

		WikiNavigator.gotoAllPagesPG();

		WikiPage.addPG(
			wikiPageContent = "Wiki Page2 Content",
			wikiPageTitle = "Wiki Page2 Title");

		Navigator.gotoPage(pageName = "Wiki Test Page");

		WikiNavigator.gotoPG(wikiPageTitle = "Wiki Page2 Title");

		WikiPage.changeParentWikipagetoWikipagePG(
			wikiPage1Title = "Wiki Page1 Title",
			wikiPage2Content = "Wiki Page2 Content",
			wikiPage2Title = "Wiki Page2 Title",
			wikiPageContent = "Wiki Page2 Content");

		Navigator.gotoPage(pageName = "Wiki Test Page");

		WikiNavigator.gotoPG(wikiPageTitle = "Wiki Page2 Title");

		WikiPage.revertChangeParentWikipagetoWikipagePG(
			wikiPage1Title = "Wiki Page1 Title",
			wikiPage2Content = "Wiki Page2 Content",
			wikiPage2Title = "Wiki Page2 Title",
			wikiVersion1Summary = "Changed parent from",
			wikiVersion2Summary = "Reverted to 1.0");

		Navigator.gotoPage(pageName = "Wiki Test Page");

		WikiNavigator.gotoPG(
			wikiPageContent = "Wiki Page1 Content",
			wikiPageRevision = "1.0",
			wikiPageTitle = "Wiki Page1 Title",
			wikiPageUsername = "Test Test");

		WikiPage.viewPG(
			wikiPageContent = "Wiki Page1 Content",
			wikiPageTitle = "Wiki Page1 Title");

		Navigator.gotoPage(pageName = "Wiki Test Page");

		WikiNavigator.gotoPG(
			wikiPageContent = "Wiki Page2 Content",
			wikiPageRevision = "1.2",
			wikiPageTitle = "Wiki Page2 Title",
			wikiPageUsername = "Test Test");

		WikiPage.viewPG(
			wikiPageContent = "Wiki Page2 Content",
			wikiPageTitle = "Wiki Page2 Title");
	}

	@priority = "4"
	test RevertEditFrontPage {
		Navigator.gotoPage(pageName = "Wiki Test Page");

		WikiPage.addFrontPagePG(
			wikiNodeName = "Main",
			wikiPageContent = "Wiki Page Content",
			wikiPageTitle = "FrontPage");

		Navigator.gotoPage(pageName = "Wiki Test Page");

		WikiPage.editFrontPagePG(wikiPageContentEdit = "Wiki Page Content Edit");

		Navigator.gotoPage(pageName = "Wiki Test Page");

		WikiNavigator.gotoPG(
			wikiPageContent = "Wiki Page Content Edit",
			wikiPageRevision = "1.2",
			wikiPageTitle = "FrontPage",
			wikiPageUsername = "Test Test");

		WikiPage.viewPG(
			wikiPageContent = "Wiki Page Content Edit",
			wikiPageTitle = "FrontPage");

		Navigator.gotoPage(pageName = "Wiki Test Page");

		WikiNavigator.gotoPG(wikiPageTitle = "FrontPage");

		WikiPage.revertEditPG(
			wikiPageContent = "Wiki Page Content",
			wikiPageRevisionNew = "1.3",
			wikiPageRevisionOld = "1.1",
			wikiPageTitle = "FrontPage",
			wikiVersionSummary = "Reverted to 1.1");

		Navigator.gotoPage(pageName = "Wiki Test Page");

		WikiNavigator.gotoPG(
			wikiPageContent = "Wiki Page Content",
			wikiPageRevision = "1.3",
			wikiPageTitle = "FrontPage",
			wikiPageUsername = "Test Test");

		WikiPage.viewPG(
			wikiPageContent = "Wiki Page Content",
			wikiPageTitle = "FrontPage");
	}

	@priority = "4"
	test SaveEditedPageAsDraft {
		Navigator.gotoPage(pageName = "Wiki Test Page");

		WikiNavigator.gotoAllPagesPG();

		WikiNavigator.gotoAddPageViaPG();

		WikiEntry.addPageTitle(wikiPageTitle = "Wiki Page Title");

		WikiEntry.addPageContent(wikiPageContent = "Wiki Page Content");

		PortletEntry.publish();

		Navigator.gotoPage(pageName = "Wiki Test Page");

		WikiNavigator.gotoAllPagesPG();

		WikiNavigator.gotoEntryEditViaPGTable(wikiPageTitle = "Wiki Page Title");

		WikiEntry.addPageContent(wikiPageContent = "Edited Wiki Page Content");

		WikiEntry.saveAsDraft();

		Navigator.gotoPage(pageName = "Wiki Test Page");

		WikiNavigator.gotoDraftPagesPG();

		WikiTable.viewEntry(
			draftStatus = "DRAFT",
			wikiPageTitle = "Wiki Page Title");

		WikiNavigator.gotoAllPagesPG();

		WikiNavigator.gotoEntryViaPGTable(wikiPageTitle = "Wiki Page Title");

		WikiEntry.viewPageContentBody(wikiPageContent = "Wiki Page Content");
	}

}
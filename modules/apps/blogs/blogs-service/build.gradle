buildService {
	apiDir = "../blogs-api/src/main/java"
	testDir = "../blogs-test/src/testIntegration/java"
}

dependencies {
	compileInclude group: "net.htmlparser.jericho", name: "jericho-html", version: "3.1"

	compileOnly group: "com.liferay.portal", name: "com.liferay.portal.impl", version: "default"
	compileOnly group: "com.liferay.portal", name: "com.liferay.portal.kernel", version: "default"
	compileOnly group: "com.liferay.portal", name: "com.liferay.util.java", version: "default"
	compileOnly group: "javax.portlet", name: "portlet-api", version: "3.0.1"
	compileOnly group: "javax.servlet", name: "javax.servlet-api", version: "3.1.0"
	compileOnly group: "org.osgi", name: "org.osgi.annotation.versioning", version: "1.1.0"
	compileOnly group: "org.osgi", name: "org.osgi.service.component.annotations", version: "1.3.0"
	compileOnly group: "org.osgi", name: "osgi.core", version: "6.0.0"
	compileOnly project(":apps:blogs:blogs-api")
	compileOnly project(":apps:comment:comment-api")
	compileOnly project(":apps:document-library:document-library-api")
	compileOnly project(":apps:export-import:export-import-api")
	compileOnly project(":apps:friendly-url:friendly-url-api")
	compileOnly project(":apps:message-boards:message-boards-api")
	compileOnly project(":apps:portal-search:portal-search-api")
	compileOnly project(":apps:portal-search:portal-search-spi")
	compileOnly project(":apps:portal:portal-aop-api")
	compileOnly project(":apps:portal:portal-dao-orm-custom-sql-api")
	compileOnly project(":apps:portal:portal-spring-extender-api")
	compileOnly project(":apps:portal:portal-upgrade-api")
	compileOnly project(":apps:rss:rss-api")
	compileOnly project(":apps:staging:staging-api")
	compileOnly project(":apps:static:portal-configuration:portal-configuration-metatype-api")
	compileOnly project(":apps:subscription:subscription-api")
	compileOnly project(":apps:trash:trash-api")
	compileOnly project(":apps:upload:upload-api")
	compileOnly project(":apps:xstream:xstream-configurator-api")
	compileOnly project(":core:petra:petra-function")
	compileOnly project(":core:petra:petra-lang")
	compileOnly project(":core:petra:petra-reflect")
	compileOnly project(":core:petra:petra-string")
	compileOnly project(":core:registry-api")
}
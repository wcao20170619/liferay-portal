import java.util.jar.Attributes
import java.util.jar.JarEntry
import java.util.jar.JarFile

apply plugin: "com.liferay.osgi.ext.plugin"

task runGradleTest

dependencies {
	compileOnly group: "com.liferay.portal", name: "com.liferay.portal.impl", version: "2.0.0"
	compileOnly group: "com.liferay.portal", name: "com.liferay.portal.kernel", version: "2.38.0"
	compileOnly group: "javax.portlet", name: "portlet-api", version: "3.0.1"
	compileOnly group: "javax.servlet", name: "javax.servlet-api", version: "3.1.0"

	originalModule group: "com.liferay", name: "com.liferay.login.web", version: "2.0.0"
}

repositories {
	maven {
		url "https://repository-cdn.liferay.com/nexus/content/groups/public"
	}
}

runGradleTest {
	dependsOn jar

	doLast {
		assert jar.archivePath.name == "com.liferay.login.web-2.0.0.ext.jar"

		ByteArrayOutputStream byteArrayOutputStream = new ByteArrayOutputStream()

		exec {
			args "-classpath", jar.archivePath.absolutePath
			args "com.liferay.login.web.internal.portlet.util.LoginUtil"

			executable = "javap"
			standardOutput = byteArrayOutputStream
		}

		String javap = byteArrayOutputStream.toString()

		assert javap.contains("public static java.lang.String sayHello();")

		JarFile jarFile = new JarFile(jar.archivePath)

		jarFile.withCloseable {
			assert jarFile.getEntry("META-INF/resources/hello.jspf")

			JarEntry jarEntry = jarFile.getEntry("META-INF/resources/init-ext.jsp")

			InputStream inputStream = jarFile.getInputStream(jarEntry)

			inputStream.withStream {
				assert it.text.contains('<%@ include file="/hello.jspf" %>')
			}

			Attributes attributes = jarFile.manifest.mainAttributes

			assert attributes.getValue("Bundle-SymbolicName") == "com.liferay.login.web"
			assert attributes.getValue("Bundle-Version") == "2.0.0.ext"
		}
	}
}